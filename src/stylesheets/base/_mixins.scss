// stylelint-disable
@mixin respond-to($point, $condition: max-width) {
  // Ensure media query isn't in quotes
  $condition: unquote($condition);
  // Check global breakpoints first
  @if map-has-key($breakpoints, $point) {
    @media ($condition: map-get($breakpoints, $point)) {
      @content;
    }
    // Failing that, check local tweakpoints
  } @else if map-has-key($tweakpoints, $point) {
    @media ($condition: map-get($tweakpoints, $point)) {
      @content;
    }
  } @else {
    @warn "Could not find `#{$point}` in both local ($tweakpoints) and global ($breakpoints) contexts. Media block omitted.";
  }
}

@mixin font-size($size) {
  $font-size-properties: map-get($font-sizes, $size);

  @if $font-size-properties {
    @include font-size(map-get($font-size-properties, font-size));
  } @else {
    font-size: #{$size}px;
    font-size: #{$size / 10}rem;
  }
}

@mixin clearfix() {
  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

@function colour($name) {
  @return map-get($colours, $name);
}

@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  .lt-ie9 & {
    margin-top: -25%;
    margin-left: -50%;
  }
}
// stylelint-enable
